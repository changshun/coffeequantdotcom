<?xml version="1.0"?>
<content collectionGUID="C3E61F04-2B56-429D-9924-F174E8646CA4">
  <lastEdited clientType="local-build-20120320" date="2012-03-20 23:39:05 +0530"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>TradeAnt Usage</richText>
  </textBox>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>The actual code is surprisingly less than 20 lines! It prices an autocallable (no Down In Put) which pays a (annualized) coupon of 20% if index is above 120 for times 1.75,2.0,2.25,2.5,2.75,3.0 years.&#xD;&#xD;#include &lt;stdio.h&gt;&#xD;#include &lt;tradeant/blackscholes1d.h&gt;&#xD;//sample templates&#xD;double downinput(double spot,double timeremaining)&#xD;{&#xD;&#xA0;&#xA0;&#xA0; double payoff = 0.0;&#xD;&#xA0;&#xA0;&#xA0; if(spot &lt;= 60 &amp;&amp; timeremaining == 0.0) payoff = -1*(100 - spot);&#xD;&#xA0;&#xA0;&#xA0; return payoff;&#xD;}&#xD;double digital_cashflow(double spot,double timeremaining)&#xD;{&#xD;&#xA0;&#xA0;&#xA0; double a;&#xD;&#xA0;&#xA0;&#xA0; if(spot &lt; 90 &amp;&amp; timeremaining == 0.0) return 13;&#xD;&#xA0;&#xA0;&#xA0; else return 0.0;&#xD;}&#xD;&#xD;double digital2_cashflow(double spot,double timeremaining)&#xD;{&#xD;&#xA0;&#xA0;&#xA0; //return 1;&#xD;&#xA0;&#xA0;&#xA0; double a;&#xD;&#xA0;&#xA0;&#xA0; if(spot &gt;= 100.0 &amp;&amp; timeremaining == 0.0)&#xD;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; return 13;&#xD;&#xA0;&#xA0;&#xA0; else return 0.0;&#xD;}&#xD;&#xD;int main()&#x2028;{&#xD;&#x2028;//First of all set a reference time from which all times will be calculated. Generally it is today but here you can set it to anything...&#x2028;&#xA0; //can be today or any other date - format is year,month,day&#x2028;&#xA0; setreftime(2012,Jan,1);&#x2028;&#x2028;&#xA0; //Volatility Surface&#x2028;&#xA0; volsurface v;&#x2028;&#xA0; initialize_volsurface(&amp;v);&#x2028;&#x2028;&#xA0; v.scale = 0.01;&#x2028;&#xA0; v.set_size(&amp;v,21,14);&#x2028;&#xA0; v.fetch_volatility_surface(&amp;v,"volsurface.csv");&#x2028;&#x2028;&#x2028;&#xA0; //Interest Rate Curve&#x2028;&#xA0; rates r;&#x2028;&#xA0; initialize_rates(&amp;r);&#x2028;&#xA0; r.set_constant_rate(&amp;r,0.0);&#x2028;&#x2028;&#xA0; //Dividend Curve&#x2028;&#xA0; rates divs;&#x2028;&#xA0; initialize_rates(&amp;divs);&#x2028;&#xA0; divs.set_constant_rate(&amp;divs,0.0);&#x2028;&#x2028;&#xA0; blackscholes1d digital;&#x2028;&#xA0; initialize_blackscholes1d(&amp;digital);&#x2028;&#x2028;&#xA0; digital.set_model_parameters(&amp;digital,0.005,1.25,1,200);&#x2028;&#xA0; digital.set_vol_surface(&amp;digital,v);&#x2028;&#xA0; digital.set_rates(&amp;digital,r,divs);&#x2028;&#x2028;&#x2028;&#xA0; digital.apply_cashflow = digital_cashflow;&#x2028;&#xA0; results digitalcalloutput = digital.solve(&amp;digital);&#x2028;&#x2028;&#xA0; digital.apply_cashflow = digital2_cashflow;&#x2028;&#xA0; results digitalputoutput = digital.solve(&amp;digital);&#x2028;&#x2028;&#x2028;int i=0,j=0;&#x2028;&#x2028;printf("\n*************Digital Call Prices***********\n");&#x2028;j=digital.nts-1;&#x2028;{&#x2028;&#xA0; for(i=0;i&lt;digital.numberofsteps;i++)&#x2028;&#xA0; {&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf("%.2f\t",digitalcalloutput.prices[i][j]);&#x2028;&#xA0; }&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf("\n");&#x2028;}&#x2028;j=0;&#x2028;printf("\n*************Digital Call Deltas***********\n");&#x2028;j=digital.nts-1;&#x2028;{&#x2028;&#xA0; for(i=0;i&lt;digital.numberofsteps;i++)&#x2028;&#xA0; {&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf("%.2f\t",digitalcalloutput.delta[i][j]);&#x2028;&#xA0; }&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf("\n");&#x2028;}&#x2028;j=0;&#x2028;printf("\n*************Digital Call Gammas***********\n");&#x2028;j=digital.nts-1;&#x2028;{&#x2028;&#xA0; for(i=0;i&lt;digital.numberofsteps;i++)&#x2028;&#xA0; {&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf("%.2f\t",digitalcalloutput.gamma[i][j]);&#x2028;&#xA0; }&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf("\n");&#x2028;}&#x2028;&#xD;}&#xD;&#xD;Apart form this it contains 2d Partial Differential equation for solving 2 asset baskets which will cover exotics such as max of call, best of call and anything you name. Also it contains hedging using market instruments. Some portions might be buggy, coz I can't test everything....so....looking for developers who know C and can pick up the design. If interested do mail me.... &#xD;So the same framework can be used to price almost any exotic, autocallable , range accrual, knockouts...you name it...just point to the cashflow!&#xD;&#xD;&#xD;&#xD;</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>Tutorial</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;3/20/12&lt;/b&gt;</richText>
  </textBox>
</content>
