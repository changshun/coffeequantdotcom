<?xml version="1.0"?>
<content collectionGUID="C3E61F04-2B56-429D-9924-F174E8646CA4">
  <lastEdited clientType="local-build-20120320" date="2012-03-20 23:39:05 +0530"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>TradeAnt - Design</richText>
  </textBox>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>This library pays more emphasis on hedging and pricing comes automatically. If you price anything you get a price grid for various spot and times and similarly all the Greeks. Hedging is just balancing the Greeks and it&#x2019;s quite simple once you can visualize / analyze the effect of adding other market instrument (vanilla&#x2019;s) to the Greeks. And the best part is coding is extremely easy, let me walk you through it&#x2026;.&#xD;In the background a &lt;b&gt;&lt;i&gt;PDE (Partial Differential Equation)&lt;/i&gt;&lt;/b&gt; is solved and you get better Greeks rather than dealing with stability issues of a monte carlo engine. There are numerous PDE&#x2019;s available and all of them can be solved with varying parameters.  Problem with using PDE&#x2019;s is numerical instability. &#xD;	1.	Explicit methods (as in Wilmott&#x2019;s book) are easy to code but there are huge issues with smaller timestep. &#xD;	2.	Implicit methods (also in Wilmott&#x2019;s book) are stable unconditionally but hard to code. Also for more than 2 dimensions coding becomes too messy. &#xD;&#xD;The solution is a new method called ADE = &#x201C;Alternating Direction Explicit&#x201D; - It&#x2019;s unconditionally stable like implicit method and it&#x2019;s easy to code. So all the code in trade ant is based on this rock solid numerical method. &#xD;&#xD;As of now 2 asset basket structures and single asset exotics are included. Heston PDE is being coded and do look out for git updates. Setting up tradeant is easy if you have a linux system. It looks for header files in &#x201C;include/tradeant&#x201D; directory. A sample program is included in main.c which prices a digital and an autocallable. It gives out greeks for all time (in increments of dt) and all steps (in increments of ds). &#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>Tradeant</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;3/4/12&lt;/b&gt;</richText>
  </textBox>
</content>
