<?xml version="1.0"?>
<rss xmlns:iweb="http://www.apple.com/iweb" version="2.0">
  <channel>
    <title>Blog</title>
    <link>http://www.coffeequant.com/tradeant/TradeAnt/Blog</link>
    <description>Hours of mathematical analysis boiled down to the following analysis. Fully stable explicit method for all the numerical analysis in TradeAnt. 

Download Latest Version</description>
    <item>
      <title>Tutorial</title>
      <link>http://www.coffeequant.com/tradeant/TradeAnt/Blog/Entries/2012/3/20_Tutorial.html</link>
      <guid isPermaLink="false">784f353a-9ca9-4a02-a932-c9bcba6e475e</guid>
      <pubDate>Tue, 20 Mar 2012 23:32:55 +0530</pubDate>
      <description>The actual code is surprisingly less than 20 lines! It prices an autocallable (no Down In Put) which pays a (annualized) coupon of 20% if index is above 120 for times 1.75,2.0,2.25,2.5,2.75,3.0 years.&lt;br/&gt;&lt;br/&gt;#include &amp;lt;stdio.h&gt;&lt;br/&gt;#include &amp;lt;tradeant/blackscholes1d.h&gt;&lt;br/&gt;//sample templates&lt;br/&gt;double downinput(double spot,double timeremaining)&lt;br/&gt;{&lt;br/&gt;&#xA0;&#xA0;&#xA0; double payoff = 0.0;&lt;br/&gt;&#xA0;&#xA0;&#xA0; if(spot &amp;lt;= 60 &amp;amp;&amp;amp; timeremaining == 0.0) payoff = -1*(100 - spot);&lt;br/&gt;&#xA0;&#xA0;&#xA0; return payoff;&lt;br/&gt;}&lt;br/&gt;double digital_cashflow(double spot,double timeremaining)&lt;br/&gt;{&lt;br/&gt;&#xA0;&#xA0;&#xA0; double a;&lt;br/&gt;&#xA0;&#xA0;&#xA0; if(spot &amp;lt; 90 &amp;amp;&amp;amp; timeremaining == 0.0) return 13;&lt;br/&gt;&#xA0;&#xA0;&#xA0; else return 0.0;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;double digital2_cashflow(double spot,double timeremaining)&lt;br/&gt;{&lt;br/&gt;&#xA0;&#xA0;&#xA0; //return 1;&lt;br/&gt;&#xA0;&#xA0;&#xA0; double a;&lt;br/&gt;&#xA0;&#xA0;&#xA0; if(spot &gt;= 100.0 &amp;amp;&amp;amp; timeremaining == 0.0)&lt;br/&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; return 13;&lt;br/&gt;&#xA0;&#xA0;&#xA0; else return 0.0;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;int main()&#x2028;{&lt;br/&gt;&#x2028;//First of all set a reference time from which all times will be calculated. Generally it is today but here you can set it to anything...&#x2028;&#xA0; //can be today or any other date - format is year,month,day&#x2028;&#xA0; setreftime(2012,Jan,1);&#x2028;&#x2028;&#xA0; //Volatility Surface&#x2028;&#xA0; volsurface v;&#x2028;&#xA0; initialize_volsurface(&amp;amp;v);&#x2028;&#x2028;&#xA0; v.scale = 0.01;&#x2028;&#xA0; v.set_size(&amp;amp;v,21,14);&#x2028;&#xA0; v.fetch_volatility_surface(&amp;amp;v,&amp;quot;volsurface.csv&amp;quot;);&#x2028;&#x2028;&#x2028;&#xA0; //Interest Rate Curve&#x2028;&#xA0; rates r;&#x2028;&#xA0; initialize_rates(&amp;amp;r);&#x2028;&#xA0; r.set_constant_rate(&amp;amp;r,0.0);&#x2028;&#x2028;&#xA0; //Dividend Curve&#x2028;&#xA0; rates divs;&#x2028;&#xA0; initialize_rates(&amp;amp;divs);&#x2028;&#xA0; divs.set_constant_rate(&amp;amp;divs,0.0);&#x2028;&#x2028;&#xA0; blackscholes1d digital;&#x2028;&#xA0; initialize_blackscholes1d(&amp;amp;digital);&#x2028;&#x2028;&#xA0; digital.set_model_parameters(&amp;amp;digital,0.005,1.25,1,200);&#x2028;&#xA0; digital.set_vol_surface(&amp;amp;digital,v);&#x2028;&#xA0; digital.set_rates(&amp;amp;digital,r,divs);&#x2028;&#x2028;&#x2028;&#xA0; digital.apply_cashflow = digital_cashflow;&#x2028;&#xA0; results digitalcalloutput = digital.solve(&amp;amp;digital);&#x2028;&#x2028;&#xA0; digital.apply_cashflow = digital2_cashflow;&#x2028;&#xA0; results digitalputoutput = digital.solve(&amp;amp;digital);&#x2028;&#x2028;&#x2028;int i=0,j=0;&#x2028;&#x2028;printf(&amp;quot;\n*************Digital Call Prices***********\n&amp;quot;);&#x2028;j=digital.nts-1;&#x2028;{&#x2028;&#xA0; for(i=0;i&amp;lt;digital.numberofsteps;i++)&#x2028;&#xA0; {&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf(&amp;quot;%.2f\t&amp;quot;,digitalcalloutput.prices[i][j]);&#x2028;&#xA0; }&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf(&amp;quot;\n&amp;quot;);&#x2028;}&#x2028;j=0;&#x2028;printf(&amp;quot;\n*************Digital Call Deltas***********\n&amp;quot;);&#x2028;j=digital.nts-1;&#x2028;{&#x2028;&#xA0; for(i=0;i&amp;lt;digital.numberofsteps;i++)&#x2028;&#xA0; {&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf(&amp;quot;%.2f\t&amp;quot;,digitalcalloutput.delta[i][j]);&#x2028;&#xA0; }&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf(&amp;quot;\n&amp;quot;);&#x2028;}&#x2028;j=0;&#x2028;printf(&amp;quot;\n*************Digital Call Gammas***********\n&amp;quot;);&#x2028;j=digital.nts-1;&#x2028;{&#x2028;&#xA0; for(i=0;i&amp;lt;digital.numberofsteps;i++)&#x2028;&#xA0; {&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf(&amp;quot;%.2f\t&amp;quot;,digitalcalloutput.gamma[i][j]);&#x2028;&#xA0; }&#x2028;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; printf(&amp;quot;\n&amp;quot;);&#x2028;}&#x2028;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;Apart form this it contains 2d Partial Differential equation for solving 2 asset baskets which will cover exotics such as max of call, best of call and anything you name. Also it contains hedging using market instruments. Some portions might be buggy, coz I can't test everything....so....looking for developers who know C and can pick up the design. If interested do mail me.... &lt;br/&gt;So the same framework can be used to price almost any exotic, autocallable , range accrual, knockouts...you name it...just point to the cashflow!&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</description>
      <iweb:comment enabled="0" count="0" link="http://www.coffeequant.com/tradeant/TradeAnt/Blog/Entries/2012/3/20_Tutorial.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Tradeant</title>
      <link>http://www.coffeequant.com/tradeant/TradeAnt/Blog/Entries/2012/3/4_Tradeant.html</link>
      <guid isPermaLink="false">14b6bdb1-c450-4e2b-a173-f0f36ff42d4c</guid>
      <pubDate>Sun, 4 Mar 2012 01:43:52 +0530</pubDate>
      <description>This library pays more emphasis on hedging and pricing comes automatically. If you price anything you get a price grid for various spot and times and similarly all the Greeks. Hedging is just balancing the Greeks and it&#x2019;s quite simple once you can visualize / analyze the effect of adding other market instrument (vanilla&#x2019;s) to the Greeks. And the best part is coding is extremely easy, let me walk you through it&#x2026;.&lt;br/&gt;In the background a PDE (Partial Differential Equation) is solved and you get better Greeks rather than dealing with stability issues of a monte carlo engine. There are numerous PDE&#x2019;s available and all of them can be solved with varying parameters.  Problem with using PDE&#x2019;s is numerical instability. &lt;br/&gt;	1.	Explicit methods (as in Wilmott&#x2019;s book) are easy to code but there are huge issues with smaller timestep. &lt;br/&gt;	2.	Implicit methods (also in Wilmott&#x2019;s book) are stable unconditionally but hard to code. Also for more than 2 dimensions coding becomes too messy. &lt;br/&gt;&lt;br/&gt;The solution is a new method called ADE = &#x201C;Alternating Direction Explicit&#x201D; - It&#x2019;s unconditionally stable like implicit method and it&#x2019;s easy to code. So all the code in trade ant is based on this rock solid numerical method. &lt;br/&gt;&lt;br/&gt;As of now 2 asset basket structures and single asset exotics are included. Heston PDE is being coded and do look out for git updates. Setting up tradeant is easy if you have a linux system. It looks for header files in &#x201C;include/tradeant&#x201D; directory. A sample program is included in main.c which prices a digital and an autocallable. It gives out greeks for all time (in increments of dt) and all steps (in increments of ds). &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</description>
      <iweb:comment enabled="0" count="0" link="http://www.coffeequant.com/tradeant/TradeAnt/Blog/Entries/2012/3/4_Tradeant.html#comment_layer"></iweb:comment>
    </item>
    <iweb:dateFormat>M/d/yy</iweb:dateFormat>
    <iweb:baseURL>http://www.coffeequant.com/tradeant/TradeAnt/Blog</iweb:baseURL>
    <iweb:maximumSummaryItems>10</iweb:maximumSummaryItems>
  </channel>
</rss>
